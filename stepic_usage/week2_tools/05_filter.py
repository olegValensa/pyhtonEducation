class multifilter:
    def judge_half(pos, neg):
    # ????????? ???????, ???? ??? ????????? ???? ?? ???????? ??????? (pos >= neg)

    def judge_any(pos, neg):
    # ????????? ???????, ???? ??? ????????? ???? ?? ???? ??????? (pos >= 1)

    def judge_all(pos, neg):
    # ????????? ???????, ???? ??? ????????? ??? ??????? (neg == 0)

    def __init__(self, iterable, *funcs, judge=judge_any):
        self.iterable = iterable # - ???????? ??????????????????
        self.funcs = funcs # - ??????????? ???????
        self.judge = judge # - ???????? ???????

    def __iter__(self):
        return iter(resulting_list)
        # ?????????? ???????? ?? ?????????????? ??????????????????

def mul2(x):
    return x % 2 == 0

def mul3(x):
    return x % 3 == 0

def mul5(x):
    return x % 5 == 0


fib = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]
result = list(filter(lambda x: x % 2, fib))
print(result)
# [1, 1, 3, 5, 13, 21, 55]
result = list(filter(lambda x: x % 2 == 0, fib))
print(result)
# [0, 2, 8, 34]

a = [i for i in range(31)] # [0, 1, 2, ... , 30]

print(list(multifilter(a, mul2, mul3, mul5)))
# [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30]

print(list(multifilter(a, mul2, mul3, mul5, judge=multifilter.judge_half)))
# [0, 6, 10, 12, 15, 18, 20, 24, 30]

print(list(multifilter(a, mul2, mul3, mul5, judge=multifilter.judge_all)))
# [0, 30]
